<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>rutk1t0r&#39;s blog</title>
  <subtitle>PGP 程序猿 攻城狮</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://embpgp.github.io/"/>
  <updated>2016-11-04T01:52:54.043Z</updated>
  <id>http://embpgp.github.io/</id>
  
  <author>
    <name>rutk1t0r</name>
    <email>pgp@rutk1t0r.cn</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello world</title>
    <link href="http://embpgp.github.io/2016/08/16/hello-world/"/>
    <id>http://embpgp.github.io/2016/08/16/hello-world/</id>
    <published>2016-08-16T07:10:22.000Z</published>
    <updated>2016-11-04T01:52:54.043Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-and-NexT-on-Github-建博客折腾…"><a href="#Hexo-and-NexT-on-Github-建博客折腾…" class="headerlink" title="Hexo and NexT on Github 建博客折腾…"></a>Hexo and NexT on Github 建博客折腾…</h1><hr>
<blockquote>
<p>本来已经搭建好了,后来在知乎上看到了自己以前想解决的问题—&gt;如何保证仓库所有的都同步.因为hexo只会生成网页所需要的部分,并不会将本地仓库所有内容都上传至github,由此再次折腾….</p>
</blockquote>
<p><strong>参考资料</strong>  </p>
<ol>
<li><a href="https://hexo.io/zh-cn/docs/" title="Hexo官网" target="_blank" rel="external">Hexo.io原装教程:https://hexo.io/zh-cn/docs/</a>  </li>
<li><a href="http://theme-next.iissnan.com/theme-settings.html" title="Next主题" target="_blank" rel="external">Next主题配置:http://theme-next.iissnan.com/theme-settings.html</a>  </li>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" title="不如的博客" target="_blank" rel="external">不如的教程，很是详细:http://ibruce.info/2013/11/22/hexo-your-blog/</a>  </li>
<li><a href="http://bubkoo.com/2013/12/16/hexo-issure/" title="tags.." target="_blank" rel="external">bubukoo:http://bubkoo.com/2013/12/16/hexo-issure/</a>  </li>
<li><a href="http://www.cnblogs.com/debugzer0/articles/5461804.html" target="_blank" rel="external">新增tags等:http://www.cnblogs.com/debugzer0/articles/5461804.html</a>  </li>
<li><a href="http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/" target="_blank" rel="external">双份仓库:http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</a></li>
</ol>
<hr>
<h1 id="装环境-详情参考官网教程-此处简述，至少github环境安装从略-Windows的有点坑-可以直接去nodejs官网下载msi安装"><a href="#装环境-详情参考官网教程-此处简述，至少github环境安装从略-Windows的有点坑-可以直接去nodejs官网下载msi安装" class="headerlink" title="装环境(详情参考官网教程,此处简述，至少github环境安装从略~_~Windows的有点坑,可以直接去nodejs官网下载msi安装)"></a>装环境(详情参考官网教程,此处简述，至少github环境安装从略~_~Windows的有点坑,可以直接去nodejs官网下载msi安装)</h1><p><strong>安装Node.js</strong><br>    Wget:<br>    <code>$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</code><br>    安装完成后，重启终端并执行一下命令：<br>    <code>$ nvm install stable</code><br><strong>安装Hexo</strong><br>    <code>$ npm install hexo-cli -g　　#装hexo</code><br><strong>初始化项目并开启服务</strong>(在github上建立一个名为username.github.io(或者com)项目，并在本地仓库进行绑定)</p>
<pre><code class="bash">$ hexo init username.github.io　<span class="comment">#此处应保证项目(username替换成你的名字)目录已被git remote add等操作过即已经绑定github项目,如果不绑定也能用即可忽略  </span>
$ <span class="built_in">cd</span> username.github.io　　　　　　<span class="comment">#切换到工作目录   </span>
$ npm install　　　　<span class="comment">#npm加载,从远程端加载默认配置文件到本地  </span>
$ hexo g　　　<span class="comment">#生成相应的文件和文档,每次更改之后都要键入这行命令，或者直接键入hexo g -d就可生成并上传  </span>
$ hexo s 　　　<span class="comment">#开启服务监听，即在本地可以访问，默认是http://localhost:4000,每次可以先在本地浏览无误后上传至github  </span>
$ hexo d　　　<span class="comment">#上传至github,可以在浏览器键入username.github.io二级域名进行访问，在此之前需要配置好_config.yml文件  </span>
<span class="comment">#各种插件</span>
npm install hexo-generator-index --save
npm install hexo-generator-archive --save
npm install hexo-generator-category --save
npm install hexo-generator-tag --save
npm install hexo-server --save
npm install hexo-deployer-git --save
npm install hexo-deployer-heroku --save
npm install hexo-deployer-rsync --save
npm install hexo-deployer-openshift --save
npm install hexo-renderer-marked@0.2 --save
npm install hexo-renderer-stylus@0.2 --save
npm install hexo-generator-feed@1 --save
npm install hexo-generator-sitemap@1 --save
npm install hexo-generator-searchdb --save    <span class="comment">#搜索服务</span>
</code></pre>
<blockquote>
<p>如果出现生成之后没有看到预期的效果,可尝试<code>hexo clean; rm -rf .deploy_git; hexo g</code>来重新生成.  </p>
</blockquote>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p><code>按照教程更改相应参数即可，若上述命令中遇到有错误，可直接google或者按照错误打印出来的网址进行访问即可得到解决方案,下图是我的github配置,某些情况下可能需要改成使用https,但是仍然可以不必每次都输入账户名和密码</code>(以前的配置)<br><img src="/images/git.png" alt="github配置"></p>
<h1 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h1><p><code>我觉得加载一个好的主题对一个博客还是很重要的，所以我找了很久，官方放出来的链接在这里</code><a href="https://hexo.io/themes/index.html" title="theme" target="_blank" rel="external">https://hexo.io/themes/index.html</a>,<code>慢慢寻找吧，几乎都是开源可用的，有一些需要一些前端方面的知识．建议选择Next．pacman等经典的主题，即简单又美观.</code>  </p>
<h1 id="编辑和发布"><a href="#编辑和发布" class="headerlink" title="编辑和发布"></a>编辑和发布</h1><p><code>参考前文教程装好所有的插件(评论系统，统计，打赏系统等)之后就可以自己写文章发布了，在这里注意完成菜单下的各个类别的目录的创建．比如</code><strong>hexo new page “tags”</strong><code>等，否则会导致访问失败．参考快速写文章的命令以及生成和发布命令可以使得写作是一种享受哦．一起来用MarkDown写博客吧.</code>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo-and-NexT-on-Github-建博客折腾…&quot;&gt;&lt;a href=&quot;#Hexo-and-NexT-on-Github-建博客折腾…&quot; class=&quot;headerlink&quot; title=&quot;Hexo and NexT on Github 建博客折腾…&quot;&gt;
    
    </summary>
    
      <category term="study" scheme="http://embpgp.github.io/categories/study/"/>
    
    
      <category term="Configure" scheme="http://embpgp.github.io/tags/Configure/"/>
    
  </entry>
  
</feed>
